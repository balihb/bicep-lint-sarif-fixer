name: Test, Coverage, Sonar

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  FORCE_COLOR: 1
  PIP_CACHE_DIR: .cache/pip
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PIP_PROGRESS_BAR: "off"
  PRE_COMMIT_VERSION: 4.0.1
  PYTHONUNBUFFERED: 1
  # renovate: datasource=python-version depName=python
  PYTHON_VERSION: 3.13.0
  XDG_CACHE_HOME: ${{ github.workspace }}/.cache

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    name: python-${{ matrix.python-version }}-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache tox
        uses: actions/cache@v4
        with:
          path: |
            .tox
          key: tox-${{ matrix.python-version }}-${{ hashFiles('requirements-tox.txt') }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-tox.txt
            requirements-test.txt

      - name: Install tox
        run: |
          pip install -r requirements-tox.txt

      - name: Run tests with tox
        run: |
          version="py${{ matrix.python-version }}"
          version=${version//./}
          tox -e $version

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.python-version }}
          path: |
            .report
            .coverage.*
          include-hidden-files: true

  combine-junit:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache tox
        uses: actions/cache@v4
        with:
          path: |
            .tox
          key: tox-junit-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements-tox.txt') }}--${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-tox.txt
            requirements-junitparser.txt

      - name: Install tox
        run: |
          pip install -r requirements-tox.txt

      - name: Combine JUnit XML reports
        run: |
          tox -e merge

      - name: Upload combined JUnit XML report
        uses: actions/upload-artifact@v4
        with:
          name: combined-junit-report
          path: .report/junit/result.xml
          include-hidden-files: true

  combine-coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache tox
        uses: actions/cache@v4
        with:
          path: |
            .tox
          key: tox-coverage-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements-tox.txt') }}--${{ hashFiles('pyproject.toml') }}-${{ hashFiles('tox.ini') }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-tox.txt
            requirements-cov.txt

      - name: Download coverage reports from test jobs
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Install tox
        run: |
          pip install -r requirements-tox.txt

      - name: Run coverage combine and generate reports
        run: |
          tox -e coverage

      - name: Upload combined coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: combined-coverage-report
          path: |
            .report/coverage/coverage.xml
            .report/htmlcov
            .coverage
          include-hidden-files: true

  sonar:
    runs-on: ubuntu-latest
    needs:
      - combine-junit
      - combine-coverage
    env:
      SONAR_USER_HOME: ${{ github.workspace }}/.cache/sonar

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache Sonar
        id: cache-sonar
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.XDG_CACHE_HOME }}
            ${{ github.workspace }}/.scannerwork
          key: sonar-${{ env.PYTHON_VERSION }}-${{ hashFiles('sonar-project.properties') }}

      - name: debug
        run: |
          ls -la

      - name: Download combined junit reports
        uses: actions/download-artifact@v4
        with:
          name: combined-junit-report
          merge-multiple: true

      - name: Download combined coverage reports
        uses: actions/download-artifact@v4
        with:
          name: combined-coverage-report
          merge-multiple: true

      - name: debug
        run: |
          ls -la

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=.report/coverage/coverage.xml
            -Dsonar.junit.reportPaths=.report/junit/result.xml

      - name: Fix Sonar cache
        run: |
          sudo chmod -R a+rwx "${SONAR_USER_HOME}"
          sudo chmod -R a+rwx "${{ github.workspace }}/.scannerwork"
